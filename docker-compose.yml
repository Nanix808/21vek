version: "3.9"
services:
  web:
    build: .
    ports:
      - 8000:8000
    command: sh -c "alembic upgrade head && cd src && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_HOST: postgres
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}

    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    networks:
      - mycustomnetwork

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - mycustomnetwork


  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mycustomnetwork


  worker:
    build: .
    command: sh -c "cd src && celery -A tasks.celery:celery worker --loglevel=INFO --logfile=logs/celery.log"
    # volumes:
    #   - ./project:/usr/src/app
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_HOST: postgres
      REDIS_HOST: redis
     
      
    depends_on:
      - web
      - redis
      - beat
    networks:
      - mycustomnetwork

  dashboard:
    build: .
    command: sh -c "cd src && celery -A tasks.celery:celery flower"
    ports:
      - 5556:5555
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_HOST: postgres
      REDIS_HOST: redis
    depends_on:
      - web
      - redis
      - worker
    networks:
      - mycustomnetwork


  beat:
    build: .
    command: sh -c "cd src && celery -A tasks.celery:celery beat --loglevel=info"
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_HOST: postgres
      REDIS_HOST: redis
    depends_on:
      - web
      - redis
    networks:
      - mycustomnetwork      


volumes:
  postgres-data:
  redis_data:  


networks:
  mycustomnetwork:
    driver: bridge